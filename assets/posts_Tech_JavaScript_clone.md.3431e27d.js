import{_ as n,q as s,r as a,a2 as e}from"./plugin-vue_export-helper.c35c1c54.js";const m='{"title":"JavaScript \u6D45\u62F7\u8D1D\u548C\u6DF1\u62F7\u8D1D","description":null,"frontmatter":{"page":false,"title":"JavaScript \u6D45\u62F7\u8D1D\u548C\u6DF1\u62F7\u8D1D","description":null,"date":"2022-10-07T15:39:10.000Z","sidebar":true,"comment":true,"category":["Tech"],"tags":["JavaScript"]},"relativePath":"posts/Tech/JavaScript/clone.md","lastUpdated":1665130401388}',p={},t=e(`<h1 id="_1-\u6D45\u62F7\u8D1D" tabindex="-1">1. \u6D45\u62F7\u8D1D <a class="header-anchor" href="#_1-\u6D45\u62F7\u8D1D" aria-hidden="true">#</a></h1><blockquote><p>\u590D\u5236\u6307\u5411\u6E90\u5BF9\u8C61\u5730\u5740\u7684\u6307\u9488\uFF0C\u65B0\u7684\u5BF9\u8C61\u4E0E\u6E90\u5BF9\u8C61\u5171\u4EAB\u5806\u5185\u5B58\u3002</p></blockquote><p>\u65B9\u6CD5\uFF1A</p><ol><li>\u5BF9\u8C61\uFF1A<code>Object.assign()</code>;</li><li>\u6570\u7EC4\uFF1A<code>concat()</code>.</li></ol><h1 id="_2-\u6DF1\u62F7\u8D1D" tabindex="-1">2. \u6DF1\u62F7\u8D1D <a class="header-anchor" href="#_2-\u6DF1\u62F7\u8D1D" aria-hidden="true">#</a></h1><blockquote><p>\u590D\u5236\u6E90\u5BF9\u8C61\u672C\u8EAB\uFF0C\u65B0\u7684\u5BF9\u8C61\u4E0E\u6E90\u5BF9\u8C61\u4E0D\u5171\u4EAB\u5806\u5185\u5B58\u3002</p></blockquote><p>\u65B9\u6CD5\uFF1A</p><ol><li>JSON \u5E8F\u5217\u5316\uFF1A<code>JSON.parse(JSON.tostringify())</code>;</li><li>JQuery: <code>$.extend</code>;</li><li>lodash\uFF1A<code>_clone()</code>;</li><li>\u9012\u5F52\uFF1A<div class="language-js line-numbers-mode"><pre><code><span class="token comment">/**
  * deep clone
 * @param {Object} obj target object 
 * @returns new object
 */</span>
<span class="token keyword">const</span> <span class="token function-variable function">deepClone</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
     <span class="token comment">// no object</span>
     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> obj <span class="token operator">!==</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">||</span> obj <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> obj
     <span class="token comment">// is Date object</span>
     <span class="token keyword">if</span> <span class="token punctuation">(</span>obj <span class="token keyword">instanceof</span> <span class="token class-name">Date</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>
     <span class="token comment">// is RegExp object</span>
     <span class="token keyword">if</span> <span class="token punctuation">(</span>obj <span class="token keyword">instanceof</span> <span class="token class-name">RegExp</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>
     <span class="token comment">// create a new object</span>
     <span class="token keyword">const</span> cloneObj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">obj<span class="token punctuation">.</span>constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
     <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token punctuation">.</span>hasOwnProperty<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// filter original object self property</span>
             cloneObj<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deepClone</span><span class="token punctuation">(</span>obj<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// deep clone</span>
         <span class="token punctuation">}</span>
     <span class="token punctuation">}</span>
     <span class="token keyword">return</span> cloneObj
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div></li></ol>`,8),o=[t];function c(l,r,i,u,k,b){return s(),a("div",null,o)}var _=n(p,[["render",c]]);export{m as __pageData,_ as default};
