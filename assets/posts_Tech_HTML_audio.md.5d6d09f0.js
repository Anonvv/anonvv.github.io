import{_ as t}from"./plugin-vue_export-helper.21dcd24c.js";import{q as e,r as a,a1 as n}from"./framework.9679036a.js";const f='{"title":"Use and Customization of Audio Tag","description":null,"frontmatter":{"page":false,"title":"Use and Customization of Audio Tag","description":null,"date":"2022-10-05T02:36:16.000Z","sidebar":true,"comment":true,"category":["Tech"],"tags":["HTML"]},"headers":[{"level":2,"title":"1.1. Usage","slug":"_1-1-usage"},{"level":2,"title":"1.2. Tag prototype","slug":"_1-2-tag-prototype"},{"level":2,"title":"2.1. Prototype","slug":"_2-1-prototype"},{"level":2,"title":"2.2. Function","slug":"_2-2-function"},{"level":2,"title":"2.3. Event","slug":"_2-3-event"}],"relativePath":"posts/Tech/HTML/audio.md","lastUpdated":1664912558947}',s={},l=n(`<h1 id="_1-basic" tabindex="-1">1. Basic <a class="header-anchor" href="#_1-basic" aria-hidden="true">#</a></h1><h2 id="_1-1-usage" tabindex="-1">1.1. Usage <a class="header-anchor" href="#_1-1-usage" aria-hidden="true">#</a></h2><ol><li>Create using HTML;</li></ol><div class="language-html line-numbers-mode"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>audio</span> <span class="token attr-name">controls</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>test.mp3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>audio</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><ol start="2"><li>Create using JavaScript.</li></ol><div class="language-js line-numbers-mode"><pre><code><span class="token comment">// create</span>
<span class="token keyword">const</span> Audio <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Audio</span><span class="token punctuation">(</span><span class="token string">&quot;test.mp3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// get element</span>
<span class="token keyword">const</span> AudioEle <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&quot;audio&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">// Event listening</span>
AudioEle<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;canplay&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// do something...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="_1-2-tag-prototype" tabindex="-1">1.2. Tag prototype <a class="header-anchor" href="#_1-2-tag-prototype" aria-hidden="true">#</a></h2><table><thead><tr><th style="text-align:left;">Prop</th><th style="text-align:center;">Type</th><th style="text-align:left;">Des</th></tr></thead><tbody><tr><td style="text-align:left;">src</td><td style="text-align:center;">String</td><td style="text-align:left;">File path.</td></tr><tr><td style="text-align:left;">autoplay</td><td style="text-align:center;">Boolean</td><td style="text-align:left;">Autoplay after resources have been loaded.</td></tr><tr><td style="text-align:left;">preload</td><td style="text-align:center;">Boolean</td><td style="text-align:left;">If the value is <code>true</code>, <code>autoplay</code> is invalidated.</td></tr><tr><td style="text-align:left;">controls</td><td style="text-align:center;">Boolean</td><td style="text-align:left;">Show/Display the default control widget.</td></tr><tr><td style="text-align:left;">loop</td><td style="text-align:center;">Boolean</td><td style="text-align:left;">Play audio in a loop.</td></tr></tbody></table><h1 id="_2-api" tabindex="-1">2. API <a class="header-anchor" href="#_2-api" aria-hidden="true">#</a></h1><h2 id="_2-1-prototype" tabindex="-1">2.1. Prototype <a class="header-anchor" href="#_2-1-prototype" aria-hidden="true">#</a></h2><table><thead><tr><th style="text-align:left;">Prop</th><th style="text-align:left;">Type</th><th style="text-align:center;">Default</th><th style="text-align:left;">Des</th></tr></thead><tbody><tr><td style="text-align:left;">duration</td><td style="text-align:left;">Number</td><td style="text-align:center;">NaN</td><td style="text-align:left;">Audio file duration(s).</td></tr><tr><td style="text-align:left;">currentTime</td><td style="text-align:left;">Number</td><td style="text-align:center;">0</td><td style="text-align:left;">Set/Get current played time(s).</td></tr><tr><td style="text-align:left;">currentSrc</td><td style="text-align:left;">String</td><td style="text-align:center;">-</td><td style="text-align:left;">Return current file path.</td></tr><tr><td style="text-align:left;">paused</td><td style="text-align:left;">Boolean</td><td style="text-align:center;">-</td><td style="text-align:left;">Whether current file is paused.</td></tr><tr><td style="text-align:left;">ended</td><td style="text-align:left;">Boolean</td><td style="text-align:center;">false</td><td style="text-align:left;">Whether current file finishes playing.</td></tr><tr><td style="text-align:left;">muted</td><td style="text-align:left;">Boolean</td><td style="text-align:center;">false</td><td style="text-align:left;">Set/Get mute state.</td></tr><tr><td style="text-align:left;">volume</td><td style="text-align:left;">Number</td><td style="text-align:center;">1</td><td style="text-align:left;">Control the volume value(0-1).</td></tr></tbody></table><h2 id="_2-2-function" tabindex="-1">2.2. Function <a class="header-anchor" href="#_2-2-function" aria-hidden="true">#</a></h2><table><thead><tr><th style="text-align:left;">Function</th><th style="text-align:center;">Params</th><th style="text-align:center;">Return</th><th style="text-align:left;">Des</th></tr></thead><tbody><tr><td style="text-align:left;">load()</td><td style="text-align:center;">-</td><td style="text-align:center;">void</td><td style="text-align:left;">Load audio file.</td></tr><tr><td style="text-align:left;">play()</td><td style="text-align:center;">-</td><td style="text-align:center;">void</td><td style="text-align:left;">Load and play current audio.</td></tr><tr><td style="text-align:left;">pause()</td><td style="text-align:center;">-</td><td style="text-align:center;">void</td><td style="text-align:left;">Pause the audio that is playing.</td></tr><tr><td style="text-align:left;">canPlayType(obj)</td><td style="text-align:center;">obj: target file</td><td style="text-align:center;">Boolean</td><td style="text-align:left;">Test whether the target file is supported.</td></tr></tbody></table><h2 id="_2-3-event" tabindex="-1">2.3. Event <a class="header-anchor" href="#_2-3-event" aria-hidden="true">#</a></h2><table><thead><tr><th style="text-align:left;">Event</th><th style="text-align:left;">Des</th></tr></thead><tbody><tr><td style="text-align:left;">durationchange()</td><td style="text-align:left;">Duration change.</td></tr><tr><td style="text-align:left;">canplay()</td><td style="text-align:left;">Whether the current file can be played.</td></tr><tr><td style="text-align:left;">timeupdate()</td><td style="text-align:left;">When the playing time changed.</td></tr><tr><td style="text-align:left;">ended()</td><td style="text-align:left;">When current audio finishes playing.</td></tr><tr><td style="text-align:left;">error()</td><td style="text-align:left;">The current file can not be played.</td></tr></tbody></table><h1 id="_3-customization" tabindex="-1">3. Customization <a class="header-anchor" href="#_3-customization" aria-hidden="true">#</a></h1><p><a href="https://github.com/Wonderven/h5-audio/blob/main/src/components/AudioPlayer.vue" target="_blank" rel="noopener noreferrer">AudioPlayer.vue</a></p>`,17),d=[l];function i(o,r,p,c,u,g){return e(),a("div",null,d)}var x=t(s,[["render",i]]);export{f as __pageData,x as default};
